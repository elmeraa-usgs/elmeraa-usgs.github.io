{
  "hash": "ce0cd3ee5ae91c8486eeab9720feeedf",
  "result": {
    "markdown": "---\ntitle: 'Global Plastic Pollution: TidyTuesday'\nauthor: \"Elmera Azadpour\"\ndate: \"1/31/2021\"\nformat: html\ncategories: [code, analysis, visualization]\n---\n\n\n## Read in data from 'tidytuesdayR' package\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidytuesdayR)\nlibrary(tidyverse)\nlibrary(plotly)\nlibrary(fs)\nlibrary(janitor)\nlibrary(patchwork)\nlibrary(lubridate)\nlibrary(magick)\nlibrary(here)\nlibrary(grid)\nlibrary(cowplot)\nlibrary(magrittr)\n```\n:::\n\n\n## Get the Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Read in with tidytuesdayR package \n# Install from CRAN via: install.packages(\"tidytuesdayR\")\n# This loads the readme and all the datasets for the week of interest\n\n# Either ISO-8601 date or year/week works!\n\ntuesdata <- tidytuesdayR::tt_load('2021-01-26')\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n--- Compiling #TidyTuesday Information for 2021-01-26 ----\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n--- There is 1 file available ---\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n--- Starting Download ---\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tDownloading file 1 of 1: `plastics.csv`\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n--- Download complete ---\n```\n:::\n\n```{.r .cell-code}\ntuesdata <- tidytuesdayR::tt_load(2021, week = 5)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n--- Compiling #TidyTuesday Information for 2021-01-26 ----\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n--- There is 1 file available ---\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n--- Starting Download ---\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tDownloading file 1 of 1: `plastics.csv`\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n--- Download complete ---\n```\n:::\n\n```{.r .cell-code}\nplastics <- tuesdata$plastics\n\n# Or read in the data manually, up to you: \n#plastics <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-01-26/plastics.csv') %>% tolower()\n```\n:::\n\n\n## Data cleaning and wrangling to get top 5\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplastics_2020 <- plastics %>% \n  select(country, year, parent_company, pet) %>% \n  filter(year == 2020 & parent_company == \"The Coca-Cola Company\") %>% \n  group_by(country) %>% \n  summarize(count = sum(pet)) %>%\n  slice_max(count, n = 5) %>% \n  transform(country = reorder(country, order(count, decreasing = TRUE)))\n```\n:::\n\n\n## Custom theming\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Define gppr_theme() function\n\ntheme_gppr <- function(){ \n    font <- \"Palatino\"   #assign font family up front\n    \n    theme_minimal() %+replace%    #replace elements we want to change\n    \n    theme(\n      \n      #grid elements\n      panel.grid.major = element_blank(),    #strip major gridlines\n      panel.grid.minor = element_blank(),    #strip minor gridlines\n      axis.ticks = element_blank(),          #strip axis ticks\n      \n      #since theme_minimal() already strips axis lines, \n      #we don't need to do that again\n      \n      #text elements\n      plot.title = element_text(             #title\n                   family = font,            #set font family\n                   size = 20,                #set font size\n                   face = 'bold',            #bold typeface\n                   hjust = 0,                #left align\n                   vjust = 1),               #raise slightly\n      \n      plot.subtitle = element_text(          #subtitle\n                   family = font,            #font family\n                   size = 18),               #font size\n      \n      plot.caption = element_text(           #caption\n                   family = font,            #font family\n                   size = 14,                 #font size\n                   hjust = 1),               #right align\n      \n      axis.title = element_text(             #axis titles\n                   family = font,            #font family\n                   size = 18),               #font size\n      \n      axis.text = element_text(              #axis text\n                   family = font,            #axis famuly\n                   size = 18),                #font size\n      \n      axis.text.x = element_text(            #margin for axis text\n                    margin=margin(5, b = 8)),\n      \n      legend.position = \"none\"\n      \n      #since the legend often requires manual tweaking \n      #based on plot content, don't define it here\n    )\n}\n```\n:::\n\n\n## Top 5 Coke polluting countires in 2020 with logo\n\n\n::: {.cell}\n\n```{.r .cell-code}\n plot <- ggplot(data = plastics_2020, aes (x = country, y = count)) +\n  geom_bar(aes(fill = country), stat = 'identity') + \n  labs(x = \"Country\", \n       y = \"Polyester plastic count\", \n       title = \"Top 5 countries in 2020 with highest The Coca-Cola Company polyester \\nplastic count\",\n       caption = \"Source: Break Free from Plastic, \\ncourtesy of Sarah Sauve \\n #TidyTuesday \") +\n  scale_fill_brewer(palette = \"Dark2\") +\n  geom_text(\n        aes(label = paste(count), #add label\n            vjust=-0.5,                             #adjust positioning\n            family = 'Georgia'),                    #font family\n        size = 5)+\n  theme_gppr() \n\nggsave(\"plastics-a3-elmera-azadpour.png\", width = 12, height = 9, units = \"in\", dpi = 72)\n\n## sourced from https://themockup.netlify.app/posts/2019-01-09-add-a-logo-to-your-plot/\npub_plot <- image_read(here(\"posts\",\"2022-08-19-global-plastics\", \"plastics-a3-elmera-azadpour.png\"))\n#print(pub_plot)\nlogo <- image_read(here(\"posts\",\"2022-08-19-global-plastics\", \"plasticlogo.png\"))\nlogo <- image_scale(logo, \"230\")\nprint(logo)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 Ã— 7\n  format width height colorspace matte filesize density\n  <chr>  <int>  <int> <chr>      <lgl>    <int> <chr>  \n1 PNG      230     35 sRGB       TRUE         0 57x57  \n```\n:::\n\n::: {.cell-output-display}\n![](globalplastic-elmera-azadpour_files/figure-html/unnamed-chunk-4-1.png){width=115}\n:::\n\n```{.r .cell-code}\n# get dims of the plot\nplot_height <- magick::image_info(pub_plot)$height\nplot_width <- magick::image_info(pub_plot)$width\n\n# get dims of the logo\nlogo_width <-  magick::image_info(logo)$width\nlogo_height <- magick::image_info(logo)$height\n\n# get number of pixels to be 1% from the bottom of the plot\n# while accounting for the logo height\nplot_height - logo_height - plot_height * 0.01 #606.52\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 606.52\n```\n:::\n\n```{.r .cell-code}\nplot_width * 0.01 #8.64\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 8.64\n```\n:::\n\n```{.r .cell-code}\npub_plot %>% \n  image_composite(logo, offset = \"+8.642+606.52\")\n```\n\n::: {.cell-output-display}\n![](globalplastic-elmera-azadpour_files/figure-html/unnamed-chunk-4-2.png){width=432}\n:::\n:::\n",
    "supporting": [
      "globalplastic-elmera-azadpour_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}